{
    "version": 2,
    "workers": [
        {
            "type": "router",
            "realms": [
                {
                    "name": "realm1",
                    "roles": [
                        {
                            "name": "anonymous",
                            "permissions": [
                                {
                                    "uri": "",
                                    "match": "prefix",
                                    "allow": {
                                        "call": true,
                                        "register": true,
                                        "publish": true,
                                        "subscribe": true
                                    },
                                    "disclose": {
                                        "caller": false,
                                        "publisher": false
                                    },
                                    "cache": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "example_realm",
                    "roles": [
                        {
                            "name": "anonymous",
                            "permissions": [
                                {
                                    "uri": "",
                                    "match": "prefix",
                                    "allow": {
                                        "call": true,
                                        "register": true,
                                        "publish": true,
                                        "subscribe": true
                                    },
                                    "disclose": {
                                        "caller": false,
                                        "publisher": false
                                    },
                                    "cache": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "transports": [
                {
                    "type": "websocket",
                    "endpoint": {
                       "type": "tcp",
                       "port": 8080
                    }
                 },
                 {
                    "type": "web",
                    "endpoint": {
                       "type": "tcp",
                       "port": "$PORT"
                    },
                    "paths": {
                       "/": {
                          "type": "static",
                          "directory": "../index"
                       },
                        "jsexamples": {
                          "type": "static",
                          "directory": "../jsexamples"
                       },
                        "staticfiles": {
                          "type": "static",
                          "directory": "../staticfiles"
                       },
                       "ws": {
                          "type": "websocket"
                       }
                    }
                 }
            ]
        },
        {
            "type": "container",
            "options": {
                "pythonpath": [
                    ".."
                ],
                "title": "PubSub Protocol examples crossbar-worker [container]"
            },
            "id": "container_PubSub_Protocol_examples",
            "components": [
                {
                    "type": "class",
                    "classname": "examples.pubsub_protocol.basic.backend.Component",
                    "id": "component_PubSub_basic_example",
                    "realm": "example_realm",
                    "transport": {
                        "type": "websocket",
                        "endpoint": {
                            "type": "tcp",
                            "host": "127.0.0.1",
                            "port": 8080
                        },
                        "url": "ws://127.0.0.1:8080/ws"
                    }
                },
                {
                    "type": "class",
                    "classname": "examples.pubsub_protocol.complex.backend.Component",
                    "id": "component_PubSub_complex_example",
                    "realm": "example_realm",
                    "transport": {
                        "type": "websocket",
                        "endpoint": {
                            "type": "tcp",
                            "host": "127.0.0.1",
                            "port": 8080
                        },
                        "url": "ws://127.0.0.1:8080/ws"
                    }
                },
                {
                    "type": "class",
                    "classname": "examples.pubsub_protocol.options.backend.Component",
                    "id": "component_PubSub_options_example",
                    "realm": "example_realm",
                    "transport": {
                        "type": "websocket",
                        "endpoint": {
                            "type": "tcp",
                            "host": "127.0.0.1",
                            "port": 8080
                        },
                        "url": "ws://127.0.0.1:8080/ws"
                    }
                },
                {
                    "type": "class",
                    "classname": "examples.pubsub_protocol.unsubscribe.backend.Component",
                    "id": "component_PubSub_unsubscribe_example",
                    "realm": "example_realm",
                    "transport": {
                        "type": "websocket",
                        "endpoint": {
                            "type": "tcp",
                            "host": "127.0.0.1",
                            "port": 8080
                        },
                        "url": "ws://127.0.0.1:8080/ws"
                    }
                }
            ]
        },
        {
            "type": "container",
            "options": {
                "pythonpath": [
                    ".."
                ],
                "title": "Remote Process Call Protocol examples crossbar-worker [container]"
            },
            "id": "container_Remote_Process_Call_Protocol_examples",
            "components": [
                {
                    "type": "class",
                    "classname": "examples.rpc_protocol.time_service.backend.Component",
                    "id": "component_RPC_time_service_example",
                    "realm": "example_realm",
                    "transport": {
                        "type": "websocket",
                        "endpoint": {
                            "type": "tcp",
                            "host": "127.0.0.1",
                            "port": 8080
                        },
                        "url": "ws://127.0.0.1:8080/ws"
                    }
                },
                {
                    "type": "class",
                    "classname": "examples.rpc_protocol.slow_square.backend.Component",
                    "id": "component_RPC_slow_square_example",
                    "realm": "example_realm",
                    "transport": {
                        "type": "websocket",
                        "endpoint": {
                            "type": "tcp",
                            "host": "127.0.0.1",
                            "port": 8080
                        },
                        "url": "ws://127.0.0.1:8080/ws"
                    }
                },
                {
                    "type": "class",
                    "classname": "examples.rpc_protocol.arguments.backend.Component",
                    "id": "component_RPC_arguments_example",
                    "realm": "example_realm",
                    "transport": {
                        "type": "websocket",
                        "endpoint": {
                            "type": "tcp",
                            "host": "127.0.0.1",
                            "port": 8080
                        },
                        "url": "ws://127.0.0.1:8080/ws"
                    }
                },
                {
                    "type": "class",
                    "classname": "examples.rpc_protocol.complex_result.backend.Component",
                    "id": "component_RPC_complex_result_example",
                    "realm": "example_realm",
                    "transport": {
                        "type": "websocket",
                        "endpoint": {
                            "type": "tcp",
                            "host": "127.0.0.1",
                            "port": 8080
                        },
                        "url": "ws://127.0.0.1:8080/ws"
                    }
                },
                {
                    "type": "class",
                    "classname": "examples.rpc_protocol.errors.backend.Component",
                    "id": "component_RPC_errors_example",
                    "realm": "example_realm",
                    "transport": {
                        "type": "websocket",
                        "endpoint": {
                            "type": "tcp",
                            "host": "127.0.0.1",
                            "port": 8080
                        },
                        "url": "ws://127.0.0.1:8080/ws"
                    }
                },
                {
                    "type": "class",
                    "classname": "examples.rpc_protocol.progressive_results.backend.Component",
                    "id": "component_RPC_progressive_results_example",
                    "realm": "example_realm",
                    "transport": {
                        "type": "websocket",
                        "endpoint": {
                            "type": "tcp",
                            "host": "127.0.0.1",
                            "port": 8080
                        },
                        "url": "ws://127.0.0.1:8080/ws"
                    }
                },
                {
                    "type": "class",
                    "classname": "examples.rpc_protocol.options.backend.Component",
                    "id": "component_RPC_options_example",
                    "realm": "example_realm",
                    "transport": {
                        "type": "websocket",
                        "endpoint": {
                            "type": "tcp",
                            "host": "127.0.0.1",
                            "port": 8080
                        },
                        "url": "ws://127.0.0.1:8080/ws"
                    }
                }
            ]
        },
        {
            "type": "container",
            "options": {
                "pythonpath": [
                    ".."
                ],
                "title": "Database component examples crossbar-worker [container]"
            },
            "id": "container_db_component_examples",
            "components": [
                {
                    "type": "class",
                    "classname": "examples.twisted_database_component.backend.MyDatabaseComponent",
                    "id": "component_db_component_backend_example",
                    "realm": "example_realm",
                    "transport": {
                        "type": "websocket",
                        "endpoint": {
                            "type": "tcp",
                            "host": "127.0.0.1",
                            "port": 8080
                        },
                        "url": "ws://127.0.0.1:8080/ws"
                    }
                },
                {
                    "type": "class",
                    "classname": "examples.twisted_database_component.twistar_backend.Component",
                    "id": "component_db_component_twistar_backend_example",
                    "realm": "example_realm",
                    "transport": {
                        "type": "websocket",
                        "endpoint": {
                            "type": "tcp",
                            "host": "127.0.0.1",
                            "port": 8080
                        },
                        "url": "ws://127.0.0.1:8080/ws"
                    }
                }
            ]
        }
    ]
}
